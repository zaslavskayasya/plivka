{"version":3,"names":[],"mappings":"","sources":["lightgallery/plugins/fullscreen/lg-fullscreen.umd.js"],"sourcesContent":["/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.lgFullscreen = factory());\n}(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    var fullscreenSettings = {\r\n        fullScreen: true,\r\n        fullscreenPluginStrings: {\r\n            toggleFullscreen: 'Toggle Fullscreen',\r\n        },\r\n    };\n\n    var FullScreen = /** @class */ (function () {\r\n        function FullScreen(instance, $LG) {\r\n            // get lightGallery core plugin instance\r\n            this.core = instance;\r\n            this.$LG = $LG;\r\n            // extend module default settings with lightGallery core settings\r\n            this.settings = __assign(__assign({}, fullscreenSettings), this.core.settings);\r\n            return this;\r\n        }\r\n        FullScreen.prototype.init = function () {\r\n            var fullScreen = '';\r\n            if (this.settings.fullScreen) {\r\n                // check for fullscreen browser support\r\n                if (!document.fullscreenEnabled &&\r\n                    !document.webkitFullscreenEnabled &&\r\n                    !document.mozFullScreenEnabled &&\r\n                    !document.msFullscreenEnabled) {\r\n                    return;\r\n                }\r\n                else {\r\n                    fullScreen = \"<button type=\\\"button\\\" aria-label=\\\"\" + this.settings.fullscreenPluginStrings['toggleFullscreen'] + \"\\\" class=\\\"lg-fullscreen lg-icon\\\"></button>\";\r\n                    this.core.$toolbar.append(fullScreen);\r\n                    this.fullScreen();\r\n                }\r\n            }\r\n        };\r\n        FullScreen.prototype.isFullScreen = function () {\r\n            return (document.fullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.msFullscreenElement);\r\n        };\r\n        FullScreen.prototype.requestFullscreen = function () {\r\n            var el = document.documentElement;\r\n            if (el.requestFullscreen) {\r\n                el.requestFullscreen();\r\n            }\r\n            else if (el.msRequestFullscreen) {\r\n                el.msRequestFullscreen();\r\n            }\r\n            else if (el.mozRequestFullScreen) {\r\n                el.mozRequestFullScreen();\r\n            }\r\n            else if (el.webkitRequestFullscreen) {\r\n                el.webkitRequestFullscreen();\r\n            }\r\n        };\r\n        FullScreen.prototype.exitFullscreen = function () {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            }\r\n            else if (document.msExitFullscreen) {\r\n                document.msExitFullscreen();\r\n            }\r\n            else if (document.mozCancelFullScreen) {\r\n                document.mozCancelFullScreen();\r\n            }\r\n            else if (document.webkitExitFullscreen) {\r\n                document.webkitExitFullscreen();\r\n            }\r\n        };\r\n        // https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode\r\n        FullScreen.prototype.fullScreen = function () {\r\n            var _this = this;\r\n            this.$LG(document).on(\"fullscreenchange.lg.global\" + this.core.lgId + \" \\n            webkitfullscreenchange.lg.global\" + this.core.lgId + \" \\n            mozfullscreenchange.lg.global\" + this.core.lgId + \" \\n            MSFullscreenChange.lg.global\" + this.core.lgId, function () {\r\n                if (!_this.core.lgOpened)\r\n                    return;\r\n                _this.core.outer.toggleClass('lg-fullscreen-on');\r\n            });\r\n            this.core.outer\r\n                .find('.lg-fullscreen')\r\n                .first()\r\n                .on('click.lg', function () {\r\n                if (_this.isFullScreen()) {\r\n                    _this.exitFullscreen();\r\n                }\r\n                else {\r\n                    _this.requestFullscreen();\r\n                }\r\n            });\r\n        };\r\n        FullScreen.prototype.closeGallery = function () {\r\n            // exit from fullscreen if activated\r\n            if (this.isFullScreen()) {\r\n                this.exitFullscreen();\r\n            }\r\n        };\r\n        FullScreen.prototype.destroy = function () {\r\n            this.$LG(document).off(\"fullscreenchange.lg.global\" + this.core.lgId + \" \\n            webkitfullscreenchange.lg.global\" + this.core.lgId + \" \\n            mozfullscreenchange.lg.global\" + this.core.lgId + \" \\n            MSFullscreenChange.lg.global\" + this.core.lgId);\r\n        };\r\n        return FullScreen;\r\n    }());\n\n    return FullScreen;\n\n})));\n\n"],"file":"lightgallery/plugins/fullscreen/lg-fullscreen.umd.js"}