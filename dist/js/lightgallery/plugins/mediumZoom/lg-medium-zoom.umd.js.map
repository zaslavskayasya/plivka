{"version":3,"names":[],"mappings":"","sources":["lightgallery/plugins/mediumZoom/lg-medium-zoom.umd.js"],"sourcesContent":["/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.lgMediumZoom = factory());\n}(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    /**\r\n     * List of lightGallery events\r\n     * All events should be documented here\r\n     * Below interfaces are used to build the website documentations\r\n     * */\r\n    var lGEvents = {\r\n        afterAppendSlide: 'lgAfterAppendSlide',\r\n        init: 'lgInit',\r\n        hasVideo: 'lgHasVideo',\r\n        containerResize: 'lgContainerResize',\r\n        updateSlides: 'lgUpdateSlides',\r\n        afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n        beforeOpen: 'lgBeforeOpen',\r\n        afterOpen: 'lgAfterOpen',\r\n        slideItemLoad: 'lgSlideItemLoad',\r\n        beforeSlide: 'lgBeforeSlide',\r\n        afterSlide: 'lgAfterSlide',\r\n        posterClick: 'lgPosterClick',\r\n        dragStart: 'lgDragStart',\r\n        dragMove: 'lgDragMove',\r\n        dragEnd: 'lgDragEnd',\r\n        beforeNextSlide: 'lgBeforeNextSlide',\r\n        beforePrevSlide: 'lgBeforePrevSlide',\r\n        beforeClose: 'lgBeforeClose',\r\n        afterClose: 'lgAfterClose',\r\n        rotateLeft: 'lgRotateLeft',\r\n        rotateRight: 'lgRotateRight',\r\n        flipHorizontal: 'lgFlipHorizontal',\r\n        flipVertical: 'lgFlipVertical',\r\n        autoplay: 'lgAutoplay',\r\n        autoplayStart: 'lgAutoplayStart',\r\n        autoplayStop: 'lgAutoplayStop',\r\n    };\n\n    var mediumZoomSettings = {\r\n        margin: 40,\r\n        mediumZoom: true,\r\n        backgroundColor: '#000',\r\n    };\n\n    var MediumZoom = /** @class */ (function () {\r\n        function MediumZoom(instance, $LG) {\r\n            var _this = this;\r\n            // get lightGallery core plugin instance\r\n            this.core = instance;\r\n            this.$LG = $LG;\r\n            // Set margin\r\n            this.core.getMediaContainerPosition = function () {\r\n                return {\r\n                    top: _this.settings.margin,\r\n                    bottom: _this.settings.margin,\r\n                };\r\n            };\r\n            // Override some of lightGallery default settings\r\n            var defaultSettings = {\r\n                controls: false,\r\n                download: false,\r\n                counter: false,\r\n                showCloseIcon: false,\r\n                extraProps: ['lgBackgroundColor'],\r\n                closeOnTap: false,\r\n                enableSwipe: false,\r\n                enableDrag: false,\r\n                swipeToClose: false,\r\n                addClass: this.core.settings.addClass + ' lg-medium-zoom',\r\n            };\r\n            this.core.settings = __assign(__assign({}, this.core.settings), defaultSettings);\r\n            // extend module default settings with lightGallery core settings\r\n            this.settings = __assign(__assign(__assign({}, mediumZoomSettings), this.core.settings), defaultSettings);\r\n            return this;\r\n        }\r\n        MediumZoom.prototype.toggleItemClass = function () {\r\n            for (var index = 0; index < this.core.items.length; index++) {\r\n                var $element = this.$LG(this.core.items[index]);\r\n                $element.toggleClass('lg-medium-zoom-item');\r\n            }\r\n        };\r\n        MediumZoom.prototype.init = function () {\r\n            var _this = this;\r\n            if (!this.settings.mediumZoom) {\r\n                return;\r\n            }\r\n            this.core.LGel.on(lGEvents.beforeOpen + \".medium\", function () {\r\n                _this.core.$backdrop.css('background-color', _this.core.galleryItems[_this.core.index].lgBackgroundColor ||\r\n                    _this.settings.backgroundColor);\r\n            });\r\n            this.toggleItemClass();\r\n            this.core.outer.on('click.lg.medium', function () {\r\n                _this.core.closeGallery();\r\n            });\r\n        };\r\n        MediumZoom.prototype.destroy = function () {\r\n            this.toggleItemClass();\r\n        };\r\n        return MediumZoom;\r\n    }());\n\n    return MediumZoom;\n\n})));\n\n"],"file":"lightgallery/plugins/mediumZoom/lg-medium-zoom.umd.js"}