{"version":3,"names":[],"mappings":"","sources":["lightgallery/plugins/share/lg-share.umd.js"],"sourcesContent":["/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.lgShare = factory());\n}(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    var shareSettings = {\r\n        share: true,\r\n        facebook: true,\r\n        facebookDropdownText: 'Facebook',\r\n        twitter: true,\r\n        twitterDropdownText: 'Twitter',\r\n        pinterest: true,\r\n        pinterestDropdownText: 'Pinterest',\r\n        additionalShareOptions: [],\r\n        sharePluginStrings: { share: 'Share' },\r\n    };\n\n    function getFacebookShareLink(galleryItem) {\r\n        var facebookBaseUrl = '//www.facebook.com/sharer/sharer.php?u=';\r\n        return (facebookBaseUrl +\r\n            encodeURIComponent(galleryItem.facebookShareUrl || window.location.href));\r\n    }\n\n    function getTwitterShareLink(galleryItem) {\r\n        var twitterBaseUrl = '//twitter.com/intent/tweet?text=';\r\n        var url = encodeURIComponent(galleryItem.twitterShareUrl || window.location.href);\r\n        var text = galleryItem.tweetText;\r\n        return twitterBaseUrl + text + '&url=' + url;\r\n    }\n\n    function getPinterestShareLink(galleryItem) {\r\n        var pinterestBaseUrl = 'http://www.pinterest.com/pin/create/button/?url=';\r\n        var description = galleryItem.pinterestText;\r\n        var media = encodeURIComponent(galleryItem.src);\r\n        var url = encodeURIComponent(galleryItem.pinterestShareUrl || window.location.href);\r\n        return (pinterestBaseUrl +\r\n            url +\r\n            '&media=' +\r\n            media +\r\n            '&description=' +\r\n            description);\r\n    }\n\n    /**\r\n     * List of lightGallery events\r\n     * All events should be documented here\r\n     * Below interfaces are used to build the website documentations\r\n     * */\r\n    var lGEvents = {\r\n        afterAppendSlide: 'lgAfterAppendSlide',\r\n        init: 'lgInit',\r\n        hasVideo: 'lgHasVideo',\r\n        containerResize: 'lgContainerResize',\r\n        updateSlides: 'lgUpdateSlides',\r\n        afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n        beforeOpen: 'lgBeforeOpen',\r\n        afterOpen: 'lgAfterOpen',\r\n        slideItemLoad: 'lgSlideItemLoad',\r\n        beforeSlide: 'lgBeforeSlide',\r\n        afterSlide: 'lgAfterSlide',\r\n        posterClick: 'lgPosterClick',\r\n        dragStart: 'lgDragStart',\r\n        dragMove: 'lgDragMove',\r\n        dragEnd: 'lgDragEnd',\r\n        beforeNextSlide: 'lgBeforeNextSlide',\r\n        beforePrevSlide: 'lgBeforePrevSlide',\r\n        beforeClose: 'lgBeforeClose',\r\n        afterClose: 'lgAfterClose',\r\n        rotateLeft: 'lgRotateLeft',\r\n        rotateRight: 'lgRotateRight',\r\n        flipHorizontal: 'lgFlipHorizontal',\r\n        flipVertical: 'lgFlipVertical',\r\n        autoplay: 'lgAutoplay',\r\n        autoplayStart: 'lgAutoplayStart',\r\n        autoplayStop: 'lgAutoplayStop',\r\n    };\n\n    var Share = /** @class */ (function () {\r\n        function Share(instance) {\r\n            this.shareOptions = [];\r\n            // get lightGallery core plugin instance\r\n            this.core = instance;\r\n            // extend module default settings with lightGallery core settings\r\n            this.settings = __assign(__assign({}, shareSettings), this.core.settings);\r\n            return this;\r\n        }\r\n        Share.prototype.init = function () {\r\n            if (!this.settings.share) {\r\n                return;\r\n            }\r\n            this.shareOptions = __spreadArrays(this.getDefaultShareOptions(), this.settings.additionalShareOptions);\r\n            this.setLgShareMarkup();\r\n            this.core.outer\r\n                .find('.lg-share .lg-dropdown')\r\n                .append(this.getShareListHtml());\r\n            this.core.LGel.on(lGEvents.afterSlide + \".share\", this.onAfterSlide.bind(this));\r\n        };\r\n        Share.prototype.getShareListHtml = function () {\r\n            var shareHtml = '';\r\n            this.shareOptions.forEach(function (shareOption) {\r\n                shareHtml += shareOption.dropdownHTML;\r\n            });\r\n            return shareHtml;\r\n        };\r\n        Share.prototype.setLgShareMarkup = function () {\r\n            var _this = this;\r\n            this.core.$toolbar.append(\"<button type=\\\"button\\\" aria-label=\\\"\" + this.settings.sharePluginStrings['share'] + \"\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" class=\\\"lg-share lg-icon\\\">\\n                <ul class=\\\"lg-dropdown\\\" style=\\\"position: absolute;\\\"></ul></button>\");\r\n            this.core.outer.append('<div class=\"lg-dropdown-overlay\"></div>');\r\n            var $shareButton = this.core.outer.find('.lg-share');\r\n            $shareButton.first().on('click.lg', function () {\r\n                _this.core.outer.toggleClass('lg-dropdown-active');\r\n                if (_this.core.outer.hasClass('lg-dropdown-active')) {\r\n                    _this.core.outer.attr('aria-expanded', true);\r\n                }\r\n                else {\r\n                    _this.core.outer.attr('aria-expanded', false);\r\n                }\r\n            });\r\n            this.core.outer\r\n                .find('.lg-dropdown-overlay')\r\n                .first()\r\n                .on('click.lg', function () {\r\n                _this.core.outer.removeClass('lg-dropdown-active');\r\n                _this.core.outer.attr('aria-expanded', false);\r\n            });\r\n        };\r\n        Share.prototype.onAfterSlide = function (event) {\r\n            var _this = this;\r\n            var index = event.detail.index;\r\n            var currentItem = this.core.galleryItems[index];\r\n            setTimeout(function () {\r\n                _this.shareOptions.forEach(function (shareOption) {\r\n                    var selector = shareOption.selector;\r\n                    _this.core.outer\r\n                        .find(selector)\r\n                        .attr('href', shareOption.generateLink(currentItem));\r\n                });\r\n            }, 100);\r\n        };\r\n        Share.prototype.getShareListItemHTML = function (type, text) {\r\n            return \"<li><a class=\\\"lg-share-\" + type + \"\\\" rel=\\\"noopener\\\" target=\\\"_blank\\\"><span class=\\\"lg-icon\\\"></span><span class=\\\"lg-dropdown-text\\\">\" + text + \"</span></a></li>\";\r\n        };\r\n        Share.prototype.getDefaultShareOptions = function () {\r\n            return __spreadArrays((this.settings.facebook\r\n                ? [\r\n                    {\r\n                        type: 'facebook',\r\n                        generateLink: getFacebookShareLink,\r\n                        dropdownHTML: this.getShareListItemHTML('facebook', this.settings.facebookDropdownText),\r\n                        selector: '.lg-share-facebook',\r\n                    },\r\n                ]\r\n                : []), (this.settings.twitter\r\n                ? [\r\n                    {\r\n                        type: 'twitter',\r\n                        generateLink: getTwitterShareLink,\r\n                        dropdownHTML: this.getShareListItemHTML('twitter', this.settings.twitterDropdownText),\r\n                        selector: '.lg-share-twitter',\r\n                    },\r\n                ]\r\n                : []), (this.settings.pinterest\r\n                ? [\r\n                    {\r\n                        type: 'pinterest',\r\n                        generateLink: getPinterestShareLink,\r\n                        dropdownHTML: this.getShareListItemHTML('pinterest', this.settings.pinterestDropdownText),\r\n                        selector: '.lg-share-pinterest',\r\n                    },\r\n                ]\r\n                : []));\r\n        };\r\n        Share.prototype.destroy = function () {\r\n            this.core.outer.find('.lg-dropdown-overlay').remove();\r\n            this.core.outer.find('.lg-share').remove();\r\n            this.core.LGel.off('.lg.share');\r\n            this.core.LGel.off('.share');\r\n        };\r\n        return Share;\r\n    }());\n\n    return Share;\n\n})));\n\n"],"file":"lightgallery/plugins/share/lg-share.umd.js"}