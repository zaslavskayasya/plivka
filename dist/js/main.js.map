{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["\r\nlet menuButton = document.querySelector('.menu-lines');\r\nlet navigation = document.querySelector('.nav');\r\n\r\nmenuButton.addEventListener(\"click\", ()=> {\r\n    navigation.classList.toggle('active');\r\n})\r\n\r\n// menu swipe\r\nlet menuOpen = false;\r\n// let touchStartX = 0;\r\n// let touchEndX = 0;\r\n\r\n\r\n// function toggleMenu() {\r\n//     if (menuOpen) {\r\n//         navigation.classList.remove('active');\r\n//     } else {\r\n//         navigation.classList.add('active');\r\n//     }\r\n//     menuOpen = !menuOpen;\r\n// }\r\n\r\n// function handleTouchStart(event) {\r\n//     touchStartX = event.touches[0].clientX; \r\n// }\r\n    \r\n//   function handleTouchEnd(event) {\r\n//     touchEndX = event.changedTouches[0].clientX;  \r\n//     const deltaX = touchEndX - touchStartX;\r\n//     if (Math.abs(deltaX) > 50) {\r\n//       toggleMenu();\r\n//     }\r\n//   }\r\n\r\n// document.addEventListener('touchstart', handleTouchStart);\r\n// document.addEventListener('touchend', handleTouchEnd);\r\n\r\nlet touchStartX = 0;\r\nlet touchEndX = 0;\r\n\r\nconst elementO = document.querySelector('body'); // Замените 'yourElement' на идентификатор вашего элемента\r\n\r\nelementO.addEventListener('touchstart', function (e) {\r\n  touchStartX = e.touches[0].clientX;\r\n});\r\n\r\nelementO.addEventListener('touchend', function (e) {\r\n  touchEndX = e.changedTouches[0].clientX;\r\n\r\n  // Определяем направление свайпа\r\n  const swipeDistance = touchEndX - touchStartX;\r\n\r\n  if (swipeDistance > 0) {\r\n    navigation.classList.remove('active');\r\n  } else if (swipeDistance < 0) {\r\n    navigation.classList.add('active');\r\n  }\r\n  menuOpen = !menuOpen;\r\n});\r\n\r\nelementO.addEventListener('touchmove', function (e) {\r\n  // Предотвращаем скроллинг страницы при свайпе\r\n  // e.preventDefault();\r\n});\r\n\r\n\r\n\r\n// margin for container width full width\r\nlet containerWithNoEnd = document.querySelectorAll('.container-no-end');\r\nlet sourceContainer = document.querySelector('.container');\r\n\r\nconst makeMargin = () => {\r\n  const offsetLeftOfContainer = sourceContainer.offsetLeft;\r\n\r\n  containerWithNoEnd.forEach((item) => {\r\n    item.style.marginLeft = offsetLeftOfContainer + \"px\";\r\n  });\r\n};\r\n\r\nmakeMargin();\r\n\r\nwindow.onresize = makeMargin;\r\n\r\n/// header images \r\nconst backElelementWithBackground = document.querySelector('[data-image]');\r\n\r\nlet resizeWindowImage = function(){\r\n  const imageResponsive = backElelementWithBackground.getAttribute('data-responsive');\r\n  backElelementWithBackground.style.backgroundImage = `url(${imageResponsive})`;\r\n}\r\n\r\nlet pastImage = function(){\r\n  if (backElelementWithBackground) {\r\n    const imageUrl = backElelementWithBackground.getAttribute('data-image');\r\n    backElelementWithBackground.style.backgroundImage = `url(${imageUrl})`;\r\n  } else {\r\n    console.error('Элемент с data-атрибутом \"data-image\" не найден.');\r\n  }\r\n}\r\n\r\nlet chectSize = function(){\r\n  if(window.width < 760){\r\n    pastImage()\r\n  } else {\r\n    resizeWindowImage()\r\n  }\r\n}\r\n\r\nchectSize();\r\n\r\nwindow.addEventListener('resize', ()=> {\r\n  chectSize();\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/// sliders settings\r\n\r\n\r\n$(document).ready(function(){\r\n  $('.slider').slick({\r\n    slidesToShow: 2,\r\n    variableWidth: true\r\n  });\r\n  $(\".prev-btn\").click(function () {\r\n\t\t$(\".slider\").slick(\"slickPrev\");\r\n\t});\r\n\r\n\t$(\".next-btn\").click(function () {\r\n\t\t$(\".slider\").slick(\"slickNext\");\r\n\t});\r\n\r\n\t$(\".prev-btn\").addClass(\"slick-disabled\");\r\n\r\n\t$(\".slider\").on(\"afterChange\", function () {\r\n\t\tif ($(\".slick-prev\").hasClass(\"slick-disabled\")) {\r\n\t\t\t$(\".prev-btn\").addClass(\"slick-disabled\");\r\n\t\t} else {\r\n\t\t\t$(\".prev-btn\").removeClass(\"slick-disabled\");\r\n\t\t}\r\n\t\tif ($(\".slick-next\").hasClass(\"slick-disabled\")) {\r\n\t\t\t$(\".next-btn\").addClass(\"slick-disabled\");\r\n\t\t} else {\r\n\t\t\t$(\".next-btn\").removeClass(\"slick-disabled\");\r\n\t\t}\r\n\t});\r\n\r\n  $('.slider2').slick({\r\n    slidesToShow: 2,\r\n    variableWidth: true\r\n  });\r\n  $(\".prev-btn\").click(function () {\r\n\t\t$(\".slider2\").slick(\"slickPrev\");\r\n\t});\r\n\r\n\t$(\".next-btn\").click(function () {\r\n\t\t$(\".slider2\").slick(\"slickNext\");\r\n\t});\r\n\r\n\t$(\".prev-btn\").addClass(\"slick-disabled\");\r\n\r\n\t$(\".slider2\").on(\"afterChange\", function () {\r\n\t\tif ($(\".slick-prev\").hasClass(\"slick-disabled\")) {\r\n\t\t\t$(\".prev-btn\").addClass(\"slick-disabled\");\r\n\t\t} else {\r\n\t\t\t$(\".prev-btn\").removeClass(\"slick-disabled\");\r\n\t\t}\r\n\t\tif ($(\".slick-next\").hasClass(\"slick-disabled\")) {\r\n\t\t\t$(\".next-btn\").addClass(\"slick-disabled\");\r\n\t\t} else {\r\n\t\t\t$(\".next-btn\").removeClass(\"slick-disabled\");\r\n\t\t}\r\n\t});\r\n\r\n  $('.slider-main').slick({\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    arrows: false,\r\n    fade: true,\r\n    asNavFor: '.slider-nav',\r\n  });\r\n  $('.slider-nav').slick({\r\n    vertical:true,\r\n    verticalSwiping:true,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 2,\r\n    arrows:false,\r\n    asNavFor: '.slider-main',\r\n    focusOnSelect: true,\r\n    touchMove:true,\r\n    responsive: [{\r\n      breakpoint: 1460,\r\n      settings: {\r\n        vertical: false,\r\n        verticalSwiping: false,\r\n        slidesToScroll: 1,\r\n        slidesToShow: 3,\r\n      }\r\n    }]\r\n  });\r\n\r\n});\r\n\r\n\r\n// hide/show hwader\r\n\r\nconst headerElement = document.querySelector('.header');\r\nconst mainScreen = document.querySelector('.l-main');\r\n\r\nconst headerHeight = headerElement.offsetHeight;\r\nconst mainHeight = mainScreen.offsetHeight;\r\n\r\nlet lastScrollTop = 0;\r\n\r\nwindow.addEventListener('scroll', () => {\r\n\r\n  let scrollDistanse = window.scrollY;\r\n\r\n  if(scrollDistanse > lastScrollTop){\r\n    headerElement.classList.add('hidden');\r\n    headerElement.classList.remove('sticky');\r\n  } else {\r\n    headerElement.classList.remove('hidden');\r\n    headerElement.classList.add('sticky');\r\n  }\r\n\r\n  if(scrollDistanse === 0){\r\n    headerElement.classList.remove('sticky', 'hidden');\r\n  }\r\n\r\n   lastScrollTop = scrollDistanse;\r\n\r\n})\r\n\r\n// animation\r\n\r\nfunction onEntry(entry) {\r\n  entry.forEach(change => {\r\n    if (change.isIntersecting) {\r\n      change.target.classList.add('element-show');\r\n    }\r\n  });\r\n}\r\nlet options = { threshold: [0.5] };\r\nlet observer = new IntersectionObserver(onEntry, options);\r\nlet elements = document.querySelectorAll('.element-animation');\r\nfor (let elm of elements) {\r\n  observer.observe(elm);\r\n}"],"file":"main.js"}